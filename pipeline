



pipeline {
  agent any
  parameters {
        text(name: 'DESC', description: 'Describe about the job details')
        choice(name: 'BRANCH', choices: ['Master', 'Dev'], description: 'Choose branch') 
    }
  tools {
  maven 'Maven3'
  }
  stages {

  stage ('Checkout') {
          steps {
            	 checkout([$class: 'GitSCM', 
   		branches: [[name: '*/master']], 
		extensions: [], 
		userRemoteConfigs: [[credentialsId: 'df967d87-4567-447b-8749-4c749ea0c13d', 
                url: 'https://github.com/bhavanilakshmimamidi/hello-world.git']]])
		}
	}
    stage ('Build') {
      steps {
      sh 'mvn clean install -f MyWebApp/pom.xml'
      //sh './gradle.build  -f MYWebApp/gradle.build'
      }
    }
    stage ('Code Quality') {
      steps {
        withSonarQubeEnv('SonarQube') {
        sh 'mvn sonar:sonar -f MyWebApp/pom.xml '
        }
      }
    }
    stage ('JaCoCo') {
      steps {
      jacoco()
      }
    }
    stage ('Nexus Upload') {
      steps {
      nexusArtifactUploader(
      nexusVersion: 'nexus3',
      protocol: 'http',
      nexusUrl: 'nexus_url:8081',
      groupId: 'myGroupId',
      version: '1.0-SNAPSHOT',
      repository: 'maven-snapshots',
      credentialsId: 'fc0f1694-3036-41fe-b3e3-4c5d96fcfd26',
      artifacts: [
      [artifactId: 'MyWebApp',
      classifier: '',
      file: 'MyWebApp/target/MyWebApp.war',
      type: 'war']
      ])
      }
    }
    stage ('DEV Deploy') {
      steps {
      echo "deploying to DEV Env "
      deploy adapters: [tomcat9(credentialsId: '268c42f6-f2f5-488f-b2aa-f2374d229b2e', path: '', url: 'http://localhost:8090')], contextPath: null, war: '**/*.war'
      }
    }
    stage ('Slack Notification') {
      steps {
        echo "deployed to DEV Env successfully"
        slackSend(channel:'your slack channel_name', message: "Job is successful, here is the info - Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      }
    }
    stage ('DEV Approve') {
    agent none
      steps {
      echo "Taking approval from DEV Manager for QA Deployment"
        timeout(time: 7, unit: 'DAYS') {
        input message: 'Do you want to deploy?', submitter: 'admin'
        }
      }
    }
     stage ('QA Deploy') {
      steps {
        echo "deploying to QA Env "
        deploy adapters: [tomcat9(credentialsId: '268c42f6-f2f5-488f-b2aa-f2374d229b2e', path: '', url: 'http://localhost:8090')], contextPath: null, war: '**/*.war'
        }
    }
     stage ('Slack Notification for QA Deploy') {
          steps {
             echo "deployed to QA Env successfully"
             slackSend(channel:'your slack channel_name', message: "Job is successful, here is the info - Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      }
    } 
    stage ('QA Approve') {
      steps {
        echo "Taking approval from QA manager"
        timeout(time: 7, unit: 'DAYS') {
        input message: 'Do you want to proceed to PROD?', submitter: 'admin,manager_userid'
        }
      }
    }
        
stage ('Deploy to Production){
   steps{
   deployToProduction("production")
        }
    }
  }
post {
success {
office365ConnectorSend (color: '#00FF00', message: "SUCCESSFUL", status: "Build Success")
}

}
